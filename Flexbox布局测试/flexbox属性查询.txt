http://www.admin10000.com/document/12564.html
【1】Flex容器

	1、display:flex;【flex布局】
	
	2、flex-direction:row;[row|column|row-reverse|column-reverse]【排列方向】
	
	3、flex-wrap:nowrap;[nowrap|wrap|wrap-reverse]【是否换行】
	
	(4)、flex-flow:row nowrap;【2与3的速写】
	
	5、justify-content:space-between;[flex-start|center|flex-end|space-between|space-around]【水平轴的对齐方式】
	
	6、align-items:stretch;[flex-start|center|flex-end|stretch|baseline]【cross垂直轴的对齐方式】
	
	【注意，当flex-direction的方向改为column时，那么相应的justify-content影响从上到下的排列，align-items影响从左到右的排列】
	
	7、align-content:stretch;[flex-start|center|flex-end|stretch]【多行之间的对齐方式】
	
【2】Flex项目

	1、order:0;【改变html源码的位置顺序，默认为0，接受正负值，按照数字大小排列】
	
	2、flex-grow:0;【是否自动扩展，默认为0表示不扩展，设置1,2等表示扩展】
	
	3、flex-shrink:1;【是否自动伸缩，默认为1表示自动伸缩】
	
	4、flex-basis:auto;【初始宽度或初始高度，可以为0，auto,具体的宽度，单位为px，em等，单独设置0px，注意必须加单位，分为相对(auto)和绝对的概念;注意到底是初始宽度还是初始高度，是根据flex-direction的方向决定的】
	
	(5)、flex:1 1 0;【2,3,4的速记】
	flex:auto;【相当于flex:1 1 auto;flex项目是相对项目,意思是flex项目的宽度基于内容大小】
	flex:1;【相当于flex:1 1 0;flex项目是绝对的，意思是flex项目的宽度基于flex属性】
	
	6、align-self:flex-start;[auto|flex-start|flex-end|center|baseline|stretch]【改变某一个flex项目的沿cross垂直轴的位置而不影响其他flex项目，而align-items是设置所有的flex项目的cross轴的位置】
	
	7、【在Flex项目上使用margin:auto;,值为auto的方向（左，右或者两者都是）会占据所有剩余空间，但是设置margin:auto;时，justify-content属性就不起作用了】
	
	
【3】兼容写法

	【flex布局】
	
	.flex{
		display: box;			  
		display: -webkit-box;	  
		display: -moz-box;		
		display: -ms-flexbox;	
		display: -webkit-flex;	
		display: flex;	
	}
	
	【flex布局移动端写法】
	
	.flex{
		display: box;			  
		display: -webkit-box;	
		display: flex;
	}
	
	【水平排列】
	
	.flex_h{
		-webkit-box-orient: horizontal;
		-webkit-flex-direction: row;
		-moz-flex-direction: row;
		-ms-flex-direction: row;
		-o-flex-direction: row;
		flex-direction: row;
	}
	
	【水平换行】
	
	.flex_hwrap{
		-webkit-flex-wrap: wrap;
		-moz-flex-wrap: wrap;
		-ms-flex-wrap: wrap;
		-o-flex-wrap: wrap;
		flex-wrap: wrap;
	}
	
	【水平居中】
	
	.flex_hcenter{
		-webkit-box-pack: center;
		-webkit-justify-content: center;
		-moz-justify-content: center;
		-ms-justify-content: center;
		-o-justify-content: center;
		justify-content: center;
	}
	
	【垂直排列】
	
	.flex_v{
		-webkit-box-orient: vertical;
		-webkit-flex-direction: column;
		-moz-flex-direction: column;
		-ms-flex-direction: column;
		-o-flex-direction: column;
		flex-direction: column;
	}
	
	【垂直换行】
	
	.flex_vwrap{
		-webkit-flex-wrap: wrap;
		-moz-flex-wrap: wrap;
		-ms-flex-wrap: wrap;
		-o-flex-wrap: wrap;
		flex-wrap: wrap;
	}
	
	【垂直居中】
	
	.flex_vcenter{
		-webkit-box-align: center;
		-webkit-align-items: center;
		-moz-align-items: center;
		-ms-align-items: center;
		-o-align-items: center;
		align-items: center;
	}
	
	【平均分栏】
	
	.flex_1{
		-webkit-box-flex: 1;
		-moz-box-flex: 1;
		-webkit-flex: 1;		  
		-ms-flex: 1;			  
		flex: 1;	
	}
	
	【移动端平均分栏】
	
	.flex_1{
		-webkit-box-flex: 1;
		-webkit-flex: 1;
		flex: 1;
	}
	
	【改变排列顺序】
	
	.flex_order1{
		-webkit-box-ordinal-group: 1;   
		-moz-box-ordinal-group: 1;	 
		-ms-flex-order: 1;			 
		-webkit-order: 1;			   
		order: 1;
	}
	
	
	
	
	
	
	
	
	
	